cmake_minimum_required(VERSION 3.15)
project(checkers)

set(CMAKE_CXX_STANDARD 17) 

set(SFML_DIR "SFML-2.5.1/build")

find_package(SFML 2.5.1 COMPONENTS graphics window system REQUIRED)

# set(CMAKE_BUILD_TYPE Debug)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "../app")
set(srcDir src)

include_directories("dependencies/SFML/include")
include_directories("dependencies/AsioInclude")
set(SOURCES
${srcDir}/main.cpp

${srcDir}/Controllers/iController.cpp
${srcDir}/Controllers/GameLobbyController.cpp
${srcDir}/Controllers/LoadingScreenController.cpp
${srcDir}/Controllers/MainGameController.cpp

${srcDir}/EventSystem/EventPoller.cpp
${srcDir}/Constants/BoardConstants.cpp

${srcDir}/states/iGameState.cpp
${srcDir}/States/GameLobbyState.cpp
${srcDir}/States/LoadingScreenState.cpp
${srcDir}/States/MainGameState.cpp

${srcDir}/Views/GameLobbyView.cpp
${srcDir}/Views/LoadingScreenView.cpp
${srcDir}/Views/MainGameView.cpp

${srcDir}/Resources/PathStrings.cpp
${srcDir}/Application.cpp
${srcDir}/Board/BackGround.cpp
)

add_subdirectory(src/System system)

# Create the executable
add_executable(checkers ${SOURCES})

# Link SFML to your project
target_link_libraries(checkers sfml-window sfml-graphics sfml-system)

if(MINGW)
  target_link_libraries(checkers system ws2_32 wsock32)
endif()

