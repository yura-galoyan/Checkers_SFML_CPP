cmake_minimum_required(VERSION 3.15)
project(checkers)

set(CMAKE_CXX_STANDARD 17) 

set(SFML_DIR "SFML-2.5.1/build")

find_package(SFML 2.5.1 COMPONENTS graphics window system REQUIRED)

set(CMAKE_BUILD_TYPE Debug)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "../app")
set(src sfmlGame)

include_directories("dependencies/SFML/include")
include_directories("dependencies/AsioInclude")
set(SOURCES
${src}/main.cpp

${src}/Controllers/iController.cpp
${src}/Controllers/GameLobbyController.cpp
${src}/Controllers/LoadingScreenController.cpp
${src}/Controllers/MainGameController.cpp

${src}/EventSystem/EventPoller.cpp
${src}/Constants/BoardConstants.cpp
${src}/states/iGameState.cpp
${src}/States/GameLobbyState.cpp
${src}/States/LoadingScreenState.cpp
${src}/States/MainGameState.cpp

${src}/System/AnimationHandler.cpp
${src}/System/Text.cpp
${src}/System/Sprite.cpp
${src}/System/TextureManager.cpp
${src}/System/Window.cpp

${src}/Views/GameLobbyView.cpp
${src}/Views/LoadingScreenView.cpp
${src}/Views/MainGameView.cpp


${src}/Resources/PathStrings.cpp
${src}/Application.cpp
${src}/Board/BackGround.cpp
)

# Create the executable
add_executable(checkers ${SOURCES})

# Link SFML to your project
target_link_libraries(checkers sfml-window sfml-graphics sfml-system)

if(MINGW)
  target_link_libraries(checkers ws2_32 wsock32)
endif()

