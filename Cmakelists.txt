cmake_minimum_required(VERSION 3.15)
project(checkers)

set(CMAKE_CXX_STANDARD 17) 

set(SFML_DIR "SFML-2.5.1/build")

find_package(SFML 2.5.1 COMPONENTS graphics window system REQUIRED)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "../app")
set(src sfmlGame)

include_directories("dependencies/SFML/include")
include_directories("dependencies/AsioInclude")
set(SOURCES
${src}/main.cpp

# ${src}/Game/AbstractBoardModel.cpp
# ${src}/Game/RegularBoardModel.cpp
# ${src}/Game/AbstractBoardView.cpp
# ${src}/Game/RegularBoardView.cpp
# ${src}/Game/ChessJudge.cpp

# ${src}/System/Sprite.cpp
# ${src}/System/Texture.cpp
# ${src}/System/Window.cpp
# ${src}/System/TextureManager.cpp
# ${src}/System/AnimationHandler.cpp

# ${src}/Pieces/Bishop.cpp
# ${src}/Pieces/King.cpp
# ${src}/Pieces/Knight.cpp
# ${src}/Pieces/Pawn.cpp
# ${src}/Pieces/Piece.cpp
# ${src}/Pieces/Queen.cpp
# ${src}/Pieces/Rook.cpp

# ${src}/Factories/PiecePrototypeFactory.cpp
# ${src}/Factories/SfmlSystemFactory.cpp
)

# Create the executable
add_executable(checkers ${SOURCES})

# Link SFML to your project
target_link_libraries(checkers sfml-window sfml-graphics sfml-system)

if(MINGW)
  target_link_libraries(checkers ws2_32 wsock32)
endif()

